-- https://kurotych.com/posts/rust_neovim_debugger/
return {
  {
    'mfussenegger/nvim-dap',
    config = function()
      local dap = require 'dap'
      dap.adapters.codelldb = {
        type = 'server',
        port = '${port}',
        executable = {
          command = '/home/jmr/.local/lldb/extension/adapter/codelldb',
          args = { '--port', '${port}' },
        },
      }
      dap.configurations.rust = {
        {
          name = 'Launch file',
          type = 'codelldb',
          request = 'launch',
          program = function()
            return vim.fn.input('Path to executable: ', vim.fn.getcwd() .. '/', 'file')
          end,
          cwd = '${workspaceFolder}',
          stopOnEntry = false,
        },
      }
      vim.keymap.set('n', '<F5>', function()
        dap.continue()
      end, { desc = 'Start/continue (debug mode)' })
      vim.keymap.set('n', '<F10>', function()
        dap.step_over()
      end, { desc = 'Step over (debug mode)' })
      vim.keymap.set('n', '<F11>', function()
        dap.step_into()
      end, { desc = 'Step into (debug mode)' })
      vim.keymap.set('n', '<F12>', function()
        dap.step_out()
      end, { desc = 'Step out (debug mode)' })
      vim.keymap.set('n', '<Leader>db', function()
        dap.toggle_breakpoint()
      end, { desc = 'Toggle [D]ebug [B]reakpoint' })
      vim.keymap.set('n', '<Leader>dl', function()
        dap.run_last()
      end, { desc = 'Run [L]ast [D]ebug target' })
    end,
  },
  {
    'rcarriga/nvim-dap-ui',
    dependencies = {
      'mfussenegger/nvim-dap',
      'nvim-neotest/nvim-nio',
    },
    config = function()
      local dapui = require 'dapui'
      dapui.setup()
      vim.keymap.set('n', '<Leader>du', function()
        dapui.toggle()
      end, { desc = 'Toggle [D]ebug [U]ser interface' })
    end,
  },
}
